/*! HTML5 Boilerplate v6.0.1 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}

*{
    box-sizing: border-box;  

}

img{
    max-width:100%;
}

body{
    font-family:Nunito;
    background-color: rgb(220, 239, 242);
}

.header h1{
    font-family:Mina;
    font-size:30px;
}

.header h2{
    font-family:Nunito;
    color: #000000;
    font-size:30px;
    font-style:italic;
}

.header{
    background-color:rgba(68, 255, 227,0.8);
    text-align: center;
    padding:10px;
}

main{
    background-color: rgba(255, 42, 10,0.8);
    width:980px;
    margin:0 auto;
    padding:20px;
    border-radius:10px;
}

h2{
    color:#ffffff;
}

p{
    color:#ffffff;
}


@-webkit-keyframes spinner{
     from{
        -webkit-transform:rotateY(0deg);
                transform:rotateY(0deg); 
    }
    to{
        -webkit-transform:rotateY(-360deg);
                transform:rotateY(-360deg);
    }

}

@keyframes spinner{
     from{
        -webkit-transform:rotateY(0deg);
                transform:rotateY(0deg); 
    }
    to{
        -webkit-transform:rotateY(-360deg);
                transform:rotateY(-360deg);
    }

}

#stage{
    margin: 1em auto;
    -webkit-perspective: 1200px;
            perspective: 1200px;
    width: 120px; 
    height: 120px;
}

.spinner{
    -webkit-animation-name: spinner;
            animation-name: spinner;
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear;
    -webkit-animation-iteration-count: infinite;
            animation-iteration-count: infinite;
    -webkit-animation-duration: 6s;
            animation-duration: 6s;
    -webkit-transform-style:preserve-3d;
            transform-style:preserve-3d
}

.spinner:hover{
    -webkit-animation-play-state: paused;
            animation-play-state: paused;
}

.carousel_wrapper {
  position: relative;
  width: 320px;
  margin: 100px auto 0 auto;
  -webkit-perspective: 1000px;
          perspective: 1000px;
}

.carousel {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  -webkit-transform: rotateY(-360deg) translateZ(-412px);
          transform: rotateY(-360deg) translateZ(-412px); /* add reverse transformation from the slides */
  -webkit-animation: swirl 40s steps(10000, end) infinite;
          animation: swirl 40s steps(10000, end) infinite; /* run `swirl` animation (defined at end of CSS) infitely, with animation lasting 40 seconds, and 10,000 steps between the FROM and TO values in the animation for a smooth rotation */
}

.slide {
  position: absolute;
  top: 10px;
  left: 10px;
  width: 300px;
  height: 187px;
}

.slide img {
  width: 280px;
  height: 175px;
  border: 3px inset rgba(47, 115, 201, 0.75);
  box-shadow: 0 0 15px 3px rgba(110, 72, 221, 0.9);
}

.slide.one {
  -webkit-transform: rotateY(0deg) translateZ(412px);
          transform: rotateY(0deg) translateZ(412px);
}
.slide.two {
  -webkit-transform: rotateY(40deg) translateZ(412px);
          transform: rotateY(40deg) translateZ(412px);
}
.slide.three {
  -webkit-transform: rotateY(80deg) translateZ(412px);
          transform: rotateY(80deg) translateZ(412px);
}
.slide.four {
  -webkit-transform: rotateY(120deg) translateZ(412px);
          transform: rotateY(120deg) translateZ(412px);
}
.slide.five {
  -webkit-transform: rotateY(160deg) translateZ(412px);
          transform: rotateY(160deg) translateZ(412px);
}
.slide.six {
  -webkit-transform: rotateY(200deg) translateZ(412px);
          transform: rotateY(200deg) translateZ(412px);
}
.slide.seven {
  -webkit-transform: rotateY(240deg) translateZ(412px);
          transform: rotateY(240deg) translateZ(412px);
}
.slide.eight {
  -webkit-transform: rotateY(280deg) translateZ(412px);
          transform: rotateY(280deg) translateZ(412px);
}
.slide.nine {
  -webkit-transform: rotateY(320deg) translateZ(412px);
          transform: rotateY(320deg) translateZ(412px);
}

/*
CSS3 ANIMATION
-------------------
Simply rotates the carousel around the Y axis by using rotateY and starting at initial value, -360ยบ, and going to final value 0ยบ, then resetting.
*/

@-webkit-keyframes swirl {   
  from {
    -webkit-transform: rotateY(-360deg);
            transform: rotateY(-360deg);
  }
  to {
    -webkit-transform: rotateY(0deg);
            transform: rotateY(0deg);
  }
}

@keyframes swirl {   
  from {
    -webkit-transform: rotateY(-360deg);
            transform: rotateY(-360deg);
  }
  to {
    -webkit-transform: rotateY(0deg);
            transform: rotateY(0deg);
  }
} 

.container {
  width: 200px;
  height: 200px;
  position: relative;
  -webkit-perspective: 1000px;
  -moz-perspective: 1000px;
}

#cube {
  width: 100%;
  height: 100%;
  position: absolute;
  -webkit-transform-style: preserve-3d;
  -webkit-animation: rotatecube 10s infinite;
  
  -moz-transform-style: preserve-3d;
  -moz-animation: rotatecube 10s infinite;
}

#cube div {
  width: 200px;
  height: 200px;
  display: block;
  position: absolute;
  border: none;
  line-height: 200px;
  text-align: center;
  font-size: 50px;
  font-weight: bold;
}

@-webkit-keyframes rotatecube {
  0% { -webkit-transform: rotateX(0deg) rotateY(360deg) rotateZ(90deg); }
  25% { -webkit-transform: rotateX(90deg) rotateY(270deg) rotateZ(180deg); }
  50% { -webkit-transform: rotateX(180deg) rotateY(180deg) rotateZ(0deg); }
  75% { -webkit-transform: rotateX(270deg) rotateY(90deg) rotateZ(360deg); }
  100% { -webkit-transform: rotateX(360deg) rotateY(0deg) rotateZ(270deg); }
}

.front {
  background: rgba(255,0,0,.5);
}

.back {
  background: rgba(0,255,0,.5);
}

.right {
  background: rgba(0,0,255,.5);
}

.left {
  background: rgba(0,255,255,.5);
}

.top {
  background: rgba(255,0,255,.5);
}

.bottom {
  background: rgba(255,255,0,.5);
}

#cube .front  {
  -webkit-transform: rotateY(0deg ) translateZ( 100px );
  -moz-transform: rotateY( 0deg ) translateZ( 100px );
}
#cube .back {
  -webkit-transform: rotateX( 180deg ) translateZ( 100px );
  -moz-transform: rotateX( 180deg ) translateZ( 100px );
}
#cube .right  {
  -webkit-transform: rotateY(  90deg ) translateZ( 100px );
  -moz-transform: rotateY(  90deg ) translateZ( 100px );
}
#cube .left   {
  -webkit-transform: rotateY( -90deg ) translateZ( 100px );
  -moz-transform: rotateY( -90deg ) translateZ( 100px );
}
#cube .top    {
  -webkit-transform: rotateX(  90deg ) translateZ( 100px );
  -moz-transform: rotateX(  90deg ) translateZ( 100px );
}
#cube .bottom {
  -webkit-transform: rotateX( -90deg ) translateZ( 100px );
  -moz-transform: rotateX( -90deg ) translateZ( 100px );
}

.card-container {
  cursor: pointer;
  height: 150px;
  -webkit-perspective: 600;
          perspective: 600;
  position: relative;
  width: 150px;
}
.card {
  height: 100%;
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  transition: all 1s ease-in-out;
  width: 100%;
}
.card:hover {
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg);
}
.card .side {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  border-radius: 6px;
  height: 100%;
  position: absolute;
  overflow: hidden;
  width: 100%;
}
.card .back {
  background: #f48c42;
  color: #416ef4;
  line-height: 150px;
  text-align: center;
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg);
}

@media screen and (min-width: 1000px){

    .column{
    float: left;
    width:45%;
    margin-right:5%;
} 

    .cube{
        clear:both;
    }

    .cubecolumn{
        float:left;
        width:45%;
    }

    .container{
        float:left;
        width:45%;
    }

    .cardflip{
        clear:both;
    }


}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

















/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    -webkit-clip-path: inset(50%);
    clip-path: inset(50%);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap; /* 1 */
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    -webkit-clip-path: none;
    clip-path: none;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
    white-space: inherit;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
}

@media print,
       (-webkit-min-device-pixel-ratio: 1.25),
       (min-resolution: 1.25dppx),
       (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
    *,
    *:before,
    *:after {
        background: transparent !important;
        color: #000 !important; /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]:after {
        content: " (" attr(href) ")";
    }

    abbr[title]:after {
        content: " (" attr(title) ")";
    }

    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */

    a[href^="#"]:after,
    a[href^="javascript:"]:after {
        content: "";
    }

    pre {
        white-space: pre-wrap !important;
    }
    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */

    thead {
        display: table-header-group;
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }
}

}
